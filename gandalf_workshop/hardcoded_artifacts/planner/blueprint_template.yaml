commission_id: {commission_id}
commission_title: "Simple CLI Greeter"
commission_type: "software_mvp"
project_summary: |-
  A simple command-line tool that takes a name as an argument
  and prints a greeting message.
key_objectives:
  - "Accept a name string from command-line argument."
  - "Print 'Hello, [name]!' to the console."
  - "Handle cases where no name is provided (e.g., print a generic
    greeting or usage)."
product_specifications:
  type: "software"
  target_platform: "CLI (Command Line Interface)"
  primary_language_framework: "Python/argparse"
  modules:
    - module_name: "greeter_cli"
      description: "Main module for the CLI tool."
      components:
        - component_name: "main"
          description: "Parses arguments and calls greeting logic."
          requirements:
            - "Utilize Python's argparse module for argument parsing."
            - "Define one optional command-line argument '--name' or a
              positional argument for the name."
            - "If name is provided, pass it to a greeting function."
            - "If name is not provided, call greeting function with a
              default or handle appropriately."
        - component_name: "greeting_logic"
          description: "Contains the logic to formulate the greeting message."
          requirements:
            - "Function `generate_greeting(name: str) -> str`."
            - "If name is 'World' (default), return 'Hello, World!'."
            - "If name is other, return 'Hello, [name]!'."
  dependencies:
    - "argparse (if Python < 3.2, otherwise built-in)"
  unit_tests_required:
    - "test_generate_greeting_with_name"
    - "test_generate_greeting_without_name_default"
    - "test_cli_with_name_argument"
    - "test_cli_without_name_argument"
  data_model: {{}}
quality_criteria:
  - criterion: "All specified unit tests must pass."
  - criterion: "Code must adhere to PEP8 standards."
  - criterion: "CLI must run without errors for specified use cases."
acceptance_criteria:
  - criterion: "Running `python app.py --name Alice` prints 'Hello, Alice!'"
  - criterion: "Running `python app.py` (or equivalent for no name) prints
    'Hello, World!' or usage."
revisions:
  - version: "1.0"
    date: "{current_date}"
    notes: "Initial hardcoded blueprint."
